apiVersion: apps/v1
kind: Deployment
metadata:
  name: streaming-session-service
  namespace: youtube-mvp
  labels:
    app: streaming-session-service
    version: v1
    component: microservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: streaming-session-service
  template:
    metadata:
      labels:
        app: streaming-session-service
        version: v1
        component: microservice
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: streaming-session-service
      containers:
      - name: streaming-session-service
        image: <REGISTRY>/streaming-session-service:1.0.0
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "production"
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: host
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: port
        - name: AZURE_COSMOS_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: cosmos-secrets
              key: endpoint
        - name: AZURE_COSMOS_KEY
          valueFrom:
            secretKeyRef:
              name: cosmos-secrets
              key: key
        - name: CDN_BASE_URL
          value: "https://cdn.youtube-mvp.com"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secrets
              key: secret
        - name: OIDC_ISSUER_URI
          value: "https://<TENANT>.b2clogin.com/<TENANT>/<POLICY>/v2.0"
        - name: OIDC_JWK_SET_URI
          value: "https://<TENANT>.b2clogin.com/<TENANT>/<POLICY>/discovery/v2.0/keys"
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2000m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /actuator/health/startup
            port: 8080
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: streaming-session-service
  namespace: youtube-mvp
  labels:
    app: streaming-session-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: streaming-session-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: streaming-session-service-hpa
  namespace: youtube-mvp
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: streaming-session-service
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: streaming-session-service-pdb
  namespace: youtube-mvp
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: streaming-session-service
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: streaming-session-service-netpol
  namespace: youtube-mvp
spec:
  podSelector:
    matchLabels:
      app: streaming-session-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 6379 # Redis
    - protocol: TCP
      port: 443

