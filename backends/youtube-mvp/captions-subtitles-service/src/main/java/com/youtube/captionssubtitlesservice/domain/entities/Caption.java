package com.youtube.captionssubtitlesservice.domain.entities;

import com.azure.spring.data.cosmos.core.mapping.Container;
import com.azure.spring.data.cosmos.core.mapping.PartitionKey;
import com.youtube.captionssubtitlesservice.domain.valueobjects.*;
import lombok.*;
import org.springframework.data.annotation.Id;

import java.time.Instant;

/**
 * Caption entity representing a caption/subtitle file for a video
 */
@Getter
@Setter
@ToString
@AllArgsConstructor
@NoArgsConstructor
@Container(containerName = "captions")
public class Caption {
    
    @Id
    private String id;
    
    @PartitionKey
    private String videoId;
    
    private LanguageCode language;
    private CaptionFormat format;
    private CaptionStatus status;
    private SourceType source;
    private String blobUri;
    private String etag;
    private Integer version;
    
    private String generatedBy; // User ID or "system" for auto-generated
    private Instant createdAt;
    private Instant updatedAt;
    
    // Quality metrics
    private Float confidenceScore; // 0.0-1.0 for auto-generated captions
    private Boolean isPrimary;
    
    // Translation parent reference
    private String translatedFromCaptionId;
    
    public Caption(String videoId, LanguageCode language, CaptionFormat format, String generatedBy) {
        this.videoId = videoId;
        this.language = language;
        this.format = format;
        this.generatedBy = generatedBy;
        this.status = CaptionStatus.PENDING;
        this.source = SourceType.MANUAL;
        this.createdAt = Instant.now();
        this.updatedAt = Instant.now();
        this.isPrimary = false;
        this.version = 1;
    }
    
    public void markAsCompleted(String blobUri) {
        this.status = CaptionStatus.COMPLETED;
        this.blobUri = blobUri;
        this.updatedAt = Instant.now();
    }
    
    public void markAsFailed() {
        this.status = CaptionStatus.FAILED;
        this.updatedAt = Instant.now();
    }
    
    public void markAsProcessing() {
        this.status = CaptionStatus.PROCESSING;
        this.updatedAt = Instant.now();
    }
    
    public void incrementVersion() {
        this.version = (this.version == null ? 0 : this.version) + 1;
        this.updatedAt = Instant.now();
    }
    
    public boolean isAutoGenerated() {
        return SourceType.AUTO.equals(source);
    }
}
