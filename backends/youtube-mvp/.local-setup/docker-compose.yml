version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: youtube-mvp-postgres
    environment:
      POSTGRES_USER: youtube
      POSTGRES_PASSWORD: youtube
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./INIT_DBS.sql:/docker-entrypoint-initdb.d/INIT_DBS.sql
    # networks:
    #   - identity-auth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U youtube -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: youtube-mvp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    # networks:
    #   - identity-auth-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  # Identity Auth Service
  # identity-auth-service:
  #   build:
  #     context: ./backends/youtube-mvp/identity-auth-service
  #     dockerfile: Dockerfile
  #   container_name: identity-auth-service
  #   environment:
  #     # Database Configuration
  #     DB_USERNAME: identity_auth_user
  #     DB_PASSWORD: identity_auth_pass
      
  #     # Redis Configuration
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
      
  #     # JWT Configuration
  #     JWT_ISSUER: https://identity-auth-service.local
  #     JWT_AUDIENCE: youtube-mvp-platform
  #     JWT_ACCESS_EXPIRATION: 3600
  #     JWT_REFRESH_EXPIRATION: 2592000
      
  #     # Spring Profile
  #     SPRING_PROFILES_ACTIVE: docker
      
  #     # Logging
  #     LOG_LEVEL: INFO
      
  #     # Server Configuration
  #     SERVER_PORT: 8080
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - identity-auth-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/auth/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #   restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# networks:
#   identity-auth-network:
#     driver: bridge
