spring:
  application:
    name: content-id-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/contentid}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  flyway:
    enabled: true
    schemas: content_id
    locations: classpath:db/migration
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 2
  
  cloud:
    azure:
      appconfiguration:
        enabled: ${AZURE_APP_CONFIG_ENABLED:true}
        connection-string: ${AZURE_APP_CONFIG_CONNECTION_STRING:}
      keyvault:
        secret:
          enabled: ${AZURE_KEY_VAULT_ENABLED:true}
          endpoint: ${AZURE_KEY_VAULT_ENDPOINT:}
      cosmos:
        enabled: ${AZURE_COSMOS_ENABLED:true}
        endpoint: ${AZURE_COSMOS_ENDPOINT:}
        key: ${AZURE_COSMOS_KEY:}
        database: ${AZURE_COSMOS_DATABASE:contentid}
        auto-create-resources: true
      servicebus:
        enabled: ${AZURE_SERVICE_BUS_ENABLED:true}
        connection-string: ${AZURE_SERVICE_BUS_CONNECTION_STRING:}
        namespace: ${AZURE_SERVICE_BUS_NAMESPACE:}
        entity-name: ${AZURE_SERVICE_BUS_TOPIC:content-id-events}
        processor:
          max-concurrent-calls: 5
          max-auto-renew-duration: PT5M

azure:
  storage:
    connection-string: ${AZURE_STORAGE_CONNECTION_STRING:}
    container:
      fingerprints: ${AZURE_STORAGE_FINGERPRINTS_CONTAINER:fingerprints}
  
  event-hubs:
    connection-string: ${AZURE_EVENT_HUBS_CONNECTION_STRING:}
    event-hub-name: ${AZURE_EVENT_HUBS_NAME:match-events}

server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  health:
    redis:
      enabled: true

logging:
  level:
    root: INFO
    com.youtube.contentidservice: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

resilience4j:
  circuitbreaker:
    instances:
      blobStorage:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      matchEngine:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
  retry:
    instances:
      blobStorage:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - java.net.SocketTimeoutException
          - java.io.IOException
  timelimiter:
    instances:
      blobStorage:
        timeoutDuration: 10s

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

